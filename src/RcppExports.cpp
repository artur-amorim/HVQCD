// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// solveHVQCD
List solveHVQCD(long double xi, long double ti, long double V0, long double W0, long double lambda0);
RcppExport SEXP _HVQCD_solveHVQCD(SEXP xiSEXP, SEXP tiSEXP, SEXP V0SEXP, SEXP W0SEXP, SEXP lambda0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< long double >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< long double >::type ti(tiSEXP);
    Rcpp::traits::input_parameter< long double >::type V0(V0SEXP);
    Rcpp::traits::input_parameter< long double >::type W0(W0SEXP);
    Rcpp::traits::input_parameter< long double >::type lambda0(lambda0SEXP);
    rcpp_result_gen = Rcpp::wrap(solveHVQCD(xi, ti, V0, W0, lambda0));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_HVQCD_solveHVQCD", (DL_FUNC) &_HVQCD_solveHVQCD, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_HVQCD(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
